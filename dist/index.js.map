{"version":3,"sources":["webpack://LSFPlugin/webpack/universalModuleDefinition","webpack://LSFPlugin/webpack/bootstrap","webpack://LSFPlugin/./index.ts","webpack://LSFPlugin/./src/dao/index.ts","webpack://LSFPlugin/./src/index.ts","webpack://LSFPlugin/./src/service/index.ts","webpack://LSFPlugin/./src/store/assortment.actions.ts","webpack://LSFPlugin/./src/store/assortment.default.ts","webpack://LSFPlugin/./src/store/assortment.reducer.ts","webpack://LSFPlugin/./src/store/assortment.thunks.ts","webpack://LSFPlugin/external \"@grupakmk/libstorefront\"","webpack://LSFPlugin/external \"inversify\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"LSFPlugin\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LSFPlugin\"] = factory();\n\telse\n\t\troot[\"LSFPlugin\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.ts\");\n","export { AssortmentListPlugin } from './src/index';\nexport { AssortmentListDao } from './src/dao/index';\nexport { AssortmentListService } from './src/service/index';\nexport { AssortmentProduct } from './src/types/index';\nexport { AssortmentsDefaultState, AssortmentListModuleState } from './src/store/assortment.default';\n","import { injectable, inject } from 'inversify';\nimport { TaskQueue, URLTransform } from '@grupakmk/libstorefront';\n\n@injectable()\nexport class AssortmentListDao {\n\n    /**\n     * Returns assortment list from API\n     * @param {string} customerId\n     * @param {string} storeCode\n     * @param {string} customerToken\n     */\n    public getAssortmentList (customerId: string, storeCode?: string, customerToken?: string) {\n        return this.taskQueue.execute({\n            url: URLTransform.getAbsoluteApiUrl('/api/vendor/assortments/' + customerId + '?token={{token}}&storeCode={{storeCode}}'),\n            payload: {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n                mode: 'cors'\n            },\n            silent: true\n        });\n    }\n\n    /**\n     * Invalidates assortment list cache\n     * @param {string} customerId\n     * @param {string} customerToken\n     */\n    public invalidateAssortmentList (customerId: string, customerToken?: string) {\n        return this.taskQueue.execute({\n            url: URLTransform.getAbsoluteApiUrl('/api/vendor/assortments/' + customerId + '?token={{token}}&storeCode={{storeCode}}'),\n            payload: {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                mode: 'cors'\n            },\n            silent: true\n        });\n    }\n\n    public constructor (@inject(TaskQueue) private taskQueue: TaskQueue) {}\n}\n","import {createLibstorefrontModule, HookType, LibStorefront, Logger} from '@grupakmk/libstorefront';\nimport { LibstorefrontPlugin } from '@grupakmk/libstorefront/dist/config/types/libstorefront-plugin';\nimport { AssortmentListDao } from './dao';\nimport { AssortmentListService } from './service';\nimport { assortmentListReducer } from './store/assortment.reducer';\nimport { AssortmentsDefaultState } from './store/assortment.default';\n\n/**\n * Plugin provides support for fetching assortment list from Magento\n * and invalidating server side cache.\n * It uses internal LSF hook to listen to place order hook to invalidate cache\n * as every time order is placed, the assortment list change for the customer.\n */\nexport const AssortmentListPlugin = ((libstorefront: LibStorefront) => {\n    libstorefront.getIOCContainer().bind<AssortmentListDao>(AssortmentListDao).to(AssortmentListDao);\n    libstorefront.getIOCContainer().bind<AssortmentListService>(AssortmentListService).to(AssortmentListService);\n    libstorefront.listenTo(HookType.AfterCoreModulesRegistered, (lsf: LibStorefront) => {\n       libstorefront = lsf;\n       lsf.registerModule(createLibstorefrontModule('assortmentList', assortmentListReducer, AssortmentsDefaultState));\n    });\n    libstorefront.listenTo(HookType.AfterPlaceOrder, () => {\n        try {\n            libstorefront.get<AssortmentListService>(AssortmentListService).invalidateAssortmentList();\n        } catch (e) {\n            Logger.info('Cannot invalidate assortment list', 'assortment-list-plugin', e.message);\n        }\n    });\n}) as LibstorefrontPlugin;\n","import { injectable, inject } from 'inversify';\nimport { AbstractStore, HttpStatus, LibstorefrontInnerState, Logger } from '@grupakmk/libstorefront';\nimport { AssortmentProduct } from '../types';\nimport { AssortmentListThunks } from '../store/assortment.thunks';\nimport { AssortmentListDao } from '../dao';\n\n@injectable()\nexport class AssortmentListService {\n\n    /**\n     * Returns assortment list for selected customer\n     * @param {string} customerId\n     * @returns {Promise<AssertmentProduct[]>} products\n     */\n    public getAssortmentList (customerId?: string): Promise<AssortmentProduct[]> {\n        return this.store.dispatch(AssortmentListThunks.getAssortmentList(customerId));\n    }\n\n    /**\n     * Invalidates assortment list cache for customer\n     * @returns {Promise<void>}\n     */\n    public async invalidateAssortmentList (): Promise<void> {\n        const userId = this.store.getState().user.current.id;\n        const userToken = this.store.getState().user.token;\n        if (!userToken) { return Promise.resolve(); }\n        if (!userId || userId === '') { return Promise.resolve(); }\n        try {\n            const response = await this.dao.invalidateAssortmentList(userId, userToken);\n            if (response.code === HttpStatus.OK) { return Promise.resolve(); }\n            else { throw new Error(response.result); }\n        } catch (e) {\n            Logger.error(`Cannot invalidate: `, e.message);\n            return Promise.reject();\n        }\n    }\n\n    public constructor (\n        @inject(AbstractStore) private store: AbstractStore<LibstorefrontInnerState>,\n        @inject(AssortmentListDao) private dao: AssortmentListDao\n    ) {}\n}\n","import { AssortmentProduct } from '../types';\n\nexport namespace AssortmentListActions {\n    export const SN_ASSORTMENT_LIST = 'assortment-list';\n\n    export const SET_ASSORTMENT_LIST = SN_ASSORTMENT_LIST + '/SET_LIST';\n    export const setAssortmentList = (products: AssortmentProduct[]) => ({\n        type: SET_ASSORTMENT_LIST,\n        payload: products\n    });\n\n    export const SET_ASSORTMENT_IS_LOADING = SN_ASSORTMENT_LIST + '/IS_LOADING';\n    export const setAssortmentIsLoading = (isLoading: boolean) => ({\n        type: SET_ASSORTMENT_IS_LOADING,\n        payload: isLoading\n    });\n}\n","import { AssortmentProduct } from '../types';\n\nexport const AssortmentsDefaultState: AssortmentListModuleState = {\n    items: [],\n    isLoading: false\n};\n\nexport interface AssortmentListModuleState {\n    items: AssortmentProduct[],\n    isLoading: boolean\n}\n","import { Reducer } from '@grupakmk/libstorefront/dist/src/state-management/types/reducer';\nimport { AssortmentListModuleState, AssortmentsDefaultState } from './assortment.default';\nimport { AnyAction } from '@grupakmk/libstorefront/dist/src/state-management/types/action';\nimport { AssortmentListActions } from './assortment.actions';\n\nexport const assortmentListReducer: Reducer<AssortmentListModuleState, AnyAction> = (state = AssortmentsDefaultState, action) => {\n    switch (action.type) {\n        case AssortmentListActions.SET_ASSORTMENT_LIST: {\n            return { ...state, items: action.payload };\n        }\n        case AssortmentListActions.SET_ASSORTMENT_IS_LOADING: {\n            return { ...state, isLoading: action.payload };\n        }\n        default: return state || AssortmentsDefaultState;\n    }\n};\n","import { AssortmentListActions} from './assortment.actions';\nimport { IOCContainer, LibstorefrontInnerState, Logger, StoreViewHandler } from '@grupakmk/libstorefront';\nimport { AssortmentListDao } from '../dao';\n\nexport namespace AssortmentListThunks {\n    export const getAssortmentList = (customerId: string) => {\n        return async (dispatch, getState: () => LibstorefrontInnerState) => {\n            try {\n                await dispatch(AssortmentListActions.setAssortmentIsLoading(true));\n                const storeCode = StoreViewHandler.currentStoreView().general.store_code;\n                const userId = getState().user.current.id;\n                const userToken = getState().user.token;\n                debugger;\n                if (!userId && !customerId) { throw new Error('Cannot load assortment list. User is not defined'); }\n\n                const response = await IOCContainer.get(AssortmentListDao).getAssortmentList(customerId || userId, storeCode, userToken);\n                if (response && response.result) {\n                    await dispatch(AssortmentListActions.setAssortmentList(response.result));\n                }\n                await dispatch(AssortmentListActions.setAssortmentIsLoading(false));\n                return response.result;\n            } catch (e) {\n                Logger.error(`Cannot load assortment list: `, e);\n                await dispatch(AssortmentListActions.setAssortmentIsLoading(false));\n                return null;\n            }\n        };\n    }\n}\n","module.exports = require(\"@grupakmk/libstorefront\");","module.exports = require(\"inversify\");"],"sourceRoot":""}